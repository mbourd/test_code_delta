# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    # accessControlAllowCredentials: "%env(CORS_ALLOW_CREDENTIALS)%"

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Service\UserService:
        public: false
    app.service.user:
        alias: App\Service\UserService
        public: true

    # To configure CORS policy when doing API requests
    App\EventListener\CorsListener:
        tags:
            - { name: kernel.event_subscriber }
        bind:
            $accessControlAllowCredentials: "%env(CORS_ALLOW_CREDENTIALS)%"
            $accessControlAllowOrigin : "%env(CORS_ALLOW_ORIGIN)%"
            $accessControlAllowMethods: "%env(CORS_ALLOW_METHODS)%"
            $accessControlAllowHeaders: "%env(CORS_ALLOW_HEADERS)%"
            $accessControlMaxAge: "%env(CORS_MAX_AGE)%"
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
